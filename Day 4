library(tidyverse)

day4_raw <-
  readLines ('C:/Users/frida/Desktop/day4.txt')

receiver <- tibble (comb = NA)

collector <- vector (mode = "character", length = 1)

for (i in 1:(length(day4_raw) + 1)) {
  if (i == length (day4_raw) + 1) {
    receiver <- bind_rows (receiver, tibble(comb = collector))
  } else {
    if (day4_raw[i] != "") {
      collector <- paste (collector, day4_raw[i], sep = " ", " ")
    } else {
      receiver <- bind_rows (receiver, tibble (comb = collector))
      collector <- vector(mode = "character", length = 1)
    }
  }
}

FunStripper <- function (i.target, i.data) {
  temp <- vector (mode = "character", length = length(i.data))
  
  for (i in 1:length(i.data)) {
    temp[i] <-
      str_match(i.data[i], paste0(i.target, "\\s*(.*?)\\s* "))[2]
  }
  return (temp)
}

receiver <- receiver %>%
  mutate (
    byr = FunStripper('byr:', receiver$comb),
    iyr = FunStripper('iyr:', receiver$comb),
    eyr = FunStripper('eyr:', receiver$comb),
    hgt = FunStripper('hgt:', receiver$comb),
    hcl = FunStripper('hcl:', receiver$comb),
    ecl = FunStripper('ecl:', receiver$comb),
    pid = FunStripper('pid:', receiver$comb)
  )

valid <- receiver %>%
  filter_at (vars(byr, iyr, eyr, hgt, hcl, ecl, pid), all_vars (!is.na(.)))

# part 1 answer
nrow (valid)

# part 2

valid <- valid %>%
  mutate (
    byr_valid = (nchar(byr) == 4 &
                   as.numeric(byr) %in% 1920:2002),
    iyr_valid = (nchar(iyr) == 4 &
                   as.numeric(iyr) %in% 2010:2020),
    eyr_valid = (nchar(eyr) == 4 &
                   as.numeric(eyr) %in% 2020:2030),
    hgt_valid = (
      xor(
        regexpr ('cm', hgt, ignore.case = FALSE) > 0 &
          parse_number(hgt) %in% 150:193,
        regexpr ('in', hgt, ignore.case = FALSE) > 0 &
          parse_number(hgt) %in% 59:76
      )
    ),
    hcl_valid = (
      substr(hcl, 1, 1) == '#' &
        nchar (str_replace_all(hcl, "[^[:alnum:]]", "")) == 6 &
        nchar (hcl) == 7
    ),
    ecl_valid = (
      nchar(ecl) == 3 &
        ecl %in% c('amb', 'blu', 'brn', 'gry', 'grn', 'hzl', 'oth')
    ),
    pid_valid = (nchar(pid) == 9 &
                   nchar(
                     str_replace_all(pid, "[^[:digit:].]", "")
                   ) == 9),
    passport_valid = byr_valid &
      iyr_valid &
      eyr_valid &
      hgt_valid & hcl_valid & ecl_valid & ecl_valid & pid_valid
  )

# part 2 answer
sum(valid$passport_valid)

receiver$tempa <- tempa
receiver$tempb <- tempb
receiver$tempc <- tempc
receiver$tempd <- tempd
receiver$tempe <- tempe
receiver$tempf <- tempf
receiver$tempg <- tempg
receiver$temp <- temp

